version: 2.1
orbs:
  docker: circleci/docker@0.5.19
  django-tools: pennlabs/django-tools@0.0.1
  helm-tools: pennlabs/helm-tools@0.1.7
  react-tools: pennlabs/react-tools@0.0.1
  cypress: cypress-io/cypress@1

branch-filters: &branch-filters
  filters:
    branches:
      only:
        - master

jobs:
  test-frontend:
    docker:
      - image: pennlabs/frontend-test:latest
    steps:
      - checkout
      - restore_cache:
          key: v0-{{ .Branch }}-{{ checksum "frontend/yarn.lock" }}
      - cypress/install:
          working_directory: frontend
      - run:
          name: Install dependencies
          command: |
            cd frontend
            yarn install --frozen-lockfile
      - save_cache:
          key: v0-{{ .Branch }}-{{ checksum "frontend/yarn.lock" }}
          paths:
          - "frontend/node_modules"
          - "~/.cache/yarn"
          - "backend/.venv"
          - "/usr/local/bin"
          - "/usr/local/lib/python3.7/site-packages"
      - run:
          name: Run tests
          requires:
            - cypress/install
          command: |
            cd frontend
            yarn test

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - django-tools/check:
          project-name: pennclubs
          project-location: backend
      - react-tools/check
      - test-frontend:
          requires:
            - react-tools/check
      - docker/publish:
          name: publish-backend
          requires:
            - django-tools/check
          path: backend
          cache_from: "pennlabs/penn-clubs-backend:latest"
          image: "pennlabs/penn-clubs-backend"
          tag: "${CIRCLE_SHA1},latest"
          context: docker-publish
          <<: *branch-filters
      - docker/publish:
          name: publish-frontend
          requires:
            - test-frontend
          path: frontend
          cache_from: "pennlabs/penn-clubs-frontend:latest"
          image: "pennlabs/penn-clubs-frontend"
          tag: "${CIRCLE_SHA1},latest"
          context: docker-publish
          <<: *branch-filters
      - helm-tools/deploy:
          requires:
            - publish-backend
            - publish-frontend
          context: k8s-deploy
          <<: *branch-filters
